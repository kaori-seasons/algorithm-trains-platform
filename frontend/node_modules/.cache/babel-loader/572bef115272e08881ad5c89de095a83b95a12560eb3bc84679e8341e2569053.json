{"ast":null,"code":"const state = {\n  pipelines: [],\n  currentPipeline: null,\n  loading: false\n};\nconst mutations = {\n  SET_PIPELINES: (state, pipelines) => {\n    state.pipelines = pipelines;\n  },\n  SET_CURRENT_PIPELINE: (state, pipeline) => {\n    state.currentPipeline = pipeline;\n  },\n  SET_LOADING: (state, loading) => {\n    state.loading = loading;\n  }\n};\nconst actions = {\n  // 获取Pipeline列表\n  getPipelines({\n    commit\n  }) {\n    commit('SET_LOADING', true);\n    // 这里应该调用API\n    return new Promise(resolve => {\n      setTimeout(() => {\n        const pipelines = [{\n          id: 1,\n          name: '图像分类训练',\n          status: 'running',\n          createTime: '2024-01-15 10:30:00',\n          updateTime: '2024-01-15 11:45:00'\n        }, {\n          id: 2,\n          name: '文本分类Pipeline',\n          status: 'completed',\n          createTime: '2024-01-14 09:15:00',\n          updateTime: '2024-01-14 16:20:00'\n        }];\n        commit('SET_PIPELINES', pipelines);\n        commit('SET_LOADING', false);\n        resolve(pipelines);\n      }, 1000);\n    });\n  }\n};\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions\n};","map":{"version":3,"names":["state","pipelines","currentPipeline","loading","mutations","SET_PIPELINES","SET_CURRENT_PIPELINE","pipeline","SET_LOADING","actions","getPipelines","commit","Promise","resolve","setTimeout","id","name","status","createTime","updateTime","namespaced"],"sources":["/Users/windwheel/Documents/gitrepo/train-storge-workflow/frontend/src/store/modules/pipeline.js"],"sourcesContent":["const state = {\n  pipelines: [],\n  currentPipeline: null,\n  loading: false\n}\n\nconst mutations = {\n  SET_PIPELINES: (state, pipelines) => {\n    state.pipelines = pipelines\n  },\n  SET_CURRENT_PIPELINE: (state, pipeline) => {\n    state.currentPipeline = pipeline\n  },\n  SET_LOADING: (state, loading) => {\n    state.loading = loading\n  }\n}\n\nconst actions = {\n  // 获取Pipeline列表\n  getPipelines({ commit }) {\n    commit('SET_LOADING', true)\n    // 这里应该调用API\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const pipelines = [\n          {\n            id: 1,\n            name: '图像分类训练',\n            status: 'running',\n            createTime: '2024-01-15 10:30:00',\n            updateTime: '2024-01-15 11:45:00'\n          },\n          {\n            id: 2,\n            name: '文本分类Pipeline',\n            status: 'completed',\n            createTime: '2024-01-14 09:15:00',\n            updateTime: '2024-01-14 16:20:00'\n          }\n        ]\n        commit('SET_PIPELINES', pipelines)\n        commit('SET_LOADING', false)\n        resolve(pipelines)\n      }, 1000)\n    })\n  }\n}\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions\n} "],"mappings":"AAAA,MAAMA,KAAK,GAAG;EACZC,SAAS,EAAE,EAAE;EACbC,eAAe,EAAE,IAAI;EACrBC,OAAO,EAAE;AACX,CAAC;AAED,MAAMC,SAAS,GAAG;EAChBC,aAAa,EAAEA,CAACL,KAAK,EAAEC,SAAS,KAAK;IACnCD,KAAK,CAACC,SAAS,GAAGA,SAAS;EAC7B,CAAC;EACDK,oBAAoB,EAAEA,CAACN,KAAK,EAAEO,QAAQ,KAAK;IACzCP,KAAK,CAACE,eAAe,GAAGK,QAAQ;EAClC,CAAC;EACDC,WAAW,EAAEA,CAACR,KAAK,EAAEG,OAAO,KAAK;IAC/BH,KAAK,CAACG,OAAO,GAAGA,OAAO;EACzB;AACF,CAAC;AAED,MAAMM,OAAO,GAAG;EACd;EACAC,YAAYA,CAAC;IAAEC;EAAO,CAAC,EAAE;IACvBA,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC;IAC3B;IACA,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;MAC9BC,UAAU,CAAC,MAAM;QACf,MAAMb,SAAS,GAAG,CAChB;UACEc,EAAE,EAAE,CAAC;UACLC,IAAI,EAAE,QAAQ;UACdC,MAAM,EAAE,SAAS;UACjBC,UAAU,EAAE,qBAAqB;UACjCC,UAAU,EAAE;QACd,CAAC,EACD;UACEJ,EAAE,EAAE,CAAC;UACLC,IAAI,EAAE,cAAc;UACpBC,MAAM,EAAE,WAAW;UACnBC,UAAU,EAAE,qBAAqB;UACjCC,UAAU,EAAE;QACd,CAAC,CACF;QACDR,MAAM,CAAC,eAAe,EAAEV,SAAS,CAAC;QAClCU,MAAM,CAAC,aAAa,EAAE,KAAK,CAAC;QAC5BE,OAAO,CAACZ,SAAS,CAAC;MACpB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC;EACJ;AACF,CAAC;AAED,eAAe;EACbmB,UAAU,EAAE,IAAI;EAChBpB,KAAK;EACLI,SAAS;EACTK;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}