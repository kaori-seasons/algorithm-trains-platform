{"ast":null,"code":"import path from 'path-browserify';\nexport default {\n  name: 'SidebarItem',\n  props: {\n    item: {\n      type: Object,\n      required: true\n    },\n    basePath: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    this.onlyOneChild = null;\n    return {};\n  },\n  methods: {\n    hasOneShowingChild(children = [], parent) {\n      const showingChildren = children.filter(item => {\n        if (item.meta && item.meta.hidden) {\n          return false;\n        } else {\n          this.onlyOneChild = item;\n          return true;\n        }\n      });\n      if (showingChildren.length === 1) {\n        return true;\n      }\n      if (showingChildren.length === 0) {\n        this.onlyOneChild = {\n          ...parent,\n          path: '',\n          noShowingChildren: true\n        };\n        return true;\n      }\n      return false;\n    },\n    resolvePath(routePath) {\n      if (this.isExternal(routePath)) {\n        return routePath;\n      }\n      if (this.isExternal(this.basePath)) {\n        return this.basePath;\n      }\n      return path.resolve(this.basePath, routePath);\n    },\n    isExternal(path) {\n      return /^(https?:|mailto:|tel:)/.test(path);\n    },\n    handleLink(item) {\n      const {\n        redirect,\n        path\n      } = item;\n      if (redirect) {\n        this.$router.push(redirect);\n        return;\n      }\n      this.$router.push(path);\n    }\n  }\n};","map":{"version":3,"names":["path","name","props","item","type","Object","required","basePath","String","default","data","onlyOneChild","methods","hasOneShowingChild","children","parent","showingChildren","filter","meta","hidden","length","noShowingChildren","resolvePath","routePath","isExternal","resolve","test","handleLink","redirect","$router","push"],"sources":["/Users/windwheel/Documents/gitrepo/train-storge-workflow/frontend/src/layout/components/SidebarItem.vue"],"sourcesContent":["<template>\n  <div v-if=\"!item.meta || !item.meta.hidden\">\n    <template v-if=\"!hasOneShowingChild(item.children, item) || (onlyOneChild.children && !onlyOneChild.noShowingChildren) || item.meta && item.meta.alwaysShow\">\n      <el-submenu :index=\"resolvePath(item.path)\" popper-append-to-body>\n        <template slot=\"title\">\n          <i :class=\"item.meta && item.meta.icon\" v-if=\"item.meta && item.meta.icon\"></i>\n          <span v-if=\"item.meta && item.meta.title\">{{ item.meta.title }}</span>\n        </template>\n        <sidebar-item\n          v-for=\"child in item.children\"\n          :key=\"child.path\"\n          :item=\"child\"\n          :base-path=\"resolvePath(child.path)\"\n          class=\"nest-menu\"\n        />\n      </el-submenu>\n    </template>\n    <template v-else>\n      <el-menu-item :index=\"resolvePath(onlyOneChild.path)\" @click=\"handleLink(onlyOneChild)\">\n        <i :class=\"onlyOneChild.meta && onlyOneChild.meta.icon\" v-if=\"onlyOneChild.meta && onlyOneChild.meta.icon\"></i>\n        <span v-if=\"onlyOneChild.meta && onlyOneChild.meta.title\">{{ onlyOneChild.meta.title }}</span>\n      </el-menu-item>\n    </template>\n  </div>\n</template>\n\n<script>\nimport path from 'path-browserify'\n\nexport default {\n  name: 'SidebarItem',\n  props: {\n    item: {\n      type: Object,\n      required: true\n    },\n    basePath: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    this.onlyOneChild = null\n    return {}\n  },\n  methods: {\n    hasOneShowingChild(children = [], parent) {\n      const showingChildren = children.filter(item => {\n        if (item.meta && item.meta.hidden) {\n          return false\n        } else {\n          this.onlyOneChild = item\n          return true\n        }\n      })\n\n      if (showingChildren.length === 1) {\n        return true\n      }\n\n      if (showingChildren.length === 0) {\n        this.onlyOneChild = { ...parent, path: '', noShowingChildren: true }\n        return true\n      }\n\n      return false\n    },\n    resolvePath(routePath) {\n      if (this.isExternal(routePath)) {\n        return routePath\n      }\n      if (this.isExternal(this.basePath)) {\n        return this.basePath\n      }\n      return path.resolve(this.basePath, routePath)\n    },\n    isExternal(path) {\n      return /^(https?:|mailto:|tel:)/.test(path)\n    },\n    handleLink(item) {\n      const { redirect, path } = item\n      if (redirect) {\n        this.$router.push(redirect)\n        return\n      }\n      this.$router.push(path)\n    }\n  }\n}\n</script> "],"mappings":"AA2BA,OAAOA,IAAG,MAAO,iBAAgB;AAEjC,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE;IACLC,IAAI,EAAE;MACJC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDC,QAAQ,EAAE;MACRH,IAAI,EAAEI,MAAM;MACZC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,IAAI,CAACC,YAAW,GAAI,IAAG;IACvB,OAAO,CAAC;EACV,CAAC;EACDC,OAAO,EAAE;IACPC,kBAAkBA,CAACC,QAAO,GAAI,EAAE,EAAEC,MAAM,EAAE;MACxC,MAAMC,eAAc,GAAIF,QAAQ,CAACG,MAAM,CAACd,IAAG,IAAK;QAC9C,IAAIA,IAAI,CAACe,IAAG,IAAKf,IAAI,CAACe,IAAI,CAACC,MAAM,EAAE;UACjC,OAAO,KAAI;QACb,OAAO;UACL,IAAI,CAACR,YAAW,GAAIR,IAAG;UACvB,OAAO,IAAG;QACZ;MACF,CAAC;MAED,IAAIa,eAAe,CAACI,MAAK,KAAM,CAAC,EAAE;QAChC,OAAO,IAAG;MACZ;MAEA,IAAIJ,eAAe,CAACI,MAAK,KAAM,CAAC,EAAE;QAChC,IAAI,CAACT,YAAW,GAAI;UAAE,GAAGI,MAAM;UAAEf,IAAI,EAAE,EAAE;UAAEqB,iBAAiB,EAAE;QAAK;QACnE,OAAO,IAAG;MACZ;MAEA,OAAO,KAAI;IACb,CAAC;IACDC,WAAWA,CAACC,SAAS,EAAE;MACrB,IAAI,IAAI,CAACC,UAAU,CAACD,SAAS,CAAC,EAAE;QAC9B,OAAOA,SAAQ;MACjB;MACA,IAAI,IAAI,CAACC,UAAU,CAAC,IAAI,CAACjB,QAAQ,CAAC,EAAE;QAClC,OAAO,IAAI,CAACA,QAAO;MACrB;MACA,OAAOP,IAAI,CAACyB,OAAO,CAAC,IAAI,CAAClB,QAAQ,EAAEgB,SAAS;IAC9C,CAAC;IACDC,UAAUA,CAACxB,IAAI,EAAE;MACf,OAAO,yBAAyB,CAAC0B,IAAI,CAAC1B,IAAI;IAC5C,CAAC;IACD2B,UAAUA,CAACxB,IAAI,EAAE;MACf,MAAM;QAAEyB,QAAQ;QAAE5B;MAAK,IAAIG,IAAG;MAC9B,IAAIyB,QAAQ,EAAE;QACZ,IAAI,CAACC,OAAO,CAACC,IAAI,CAACF,QAAQ;QAC1B;MACF;MACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC9B,IAAI;IACxB;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}