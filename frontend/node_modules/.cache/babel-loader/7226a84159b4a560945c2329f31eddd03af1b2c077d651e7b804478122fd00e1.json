{"ast":null,"code":"import { mapActions } from 'vuex';\nexport default {\n  name: 'Login',\n  data() {\n    // 密码确认验证\n    const validateConfirmPassword = (rule, value, callback) => {\n      if (value !== this.registerForm.password) {\n        callback(new Error('两次输入的密码不一致'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      activeTab: 'login',\n      loading: false,\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      registerForm: {\n        username: '',\n        email: '',\n        full_name: '',\n        password: '',\n        confirm_password: ''\n      },\n      loginRules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 20,\n          message: '用户名长度在 3 到 20 个字符',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          message: '密码长度不能少于 6 个字符',\n          trigger: 'blur'\n        }]\n      },\n      registerRules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 20,\n          message: '用户名长度在 3 到 20 个字符',\n          trigger: 'blur'\n        }, {\n          pattern: /^[a-zA-Z0-9_]+$/,\n          message: '用户名只能包含字母、数字和下划线',\n          trigger: 'blur'\n        }],\n        email: [{\n          required: true,\n          message: '请输入邮箱',\n          trigger: 'blur'\n        }, {\n          type: 'email',\n          message: '请输入正确的邮箱格式',\n          trigger: 'blur'\n        }],\n        full_name: [{\n          max: 50,\n          message: '全名长度不能超过 50 个字符',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          message: '密码长度不能少于 6 个字符',\n          trigger: 'blur'\n        }],\n        confirm_password: [{\n          required: true,\n          message: '请确认密码',\n          trigger: 'blur'\n        }, {\n          validator: validateConfirmPassword,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    ...mapActions('user', ['login', 'register']),\n    async handleLogin() {\n      try {\n        await this.$refs.loginForm.validate();\n        this.loading = true;\n        await this.login(this.loginForm);\n        this.$message.success('登录成功');\n        this.$router.push('/');\n      } catch (error) {\n        console.error('登录失败:', error);\n        const message = error.response?.data?.detail || error.message || '登录失败，请重试';\n        this.$message.error(message);\n      } finally {\n        this.loading = false;\n      }\n    },\n    async handleRegister() {\n      try {\n        await this.$refs.registerForm.validate();\n        this.loading = true;\n        const registerData = {\n          username: this.registerForm.username,\n          email: this.registerForm.email,\n          password: this.registerForm.password,\n          full_name: this.registerForm.full_name || undefined\n        };\n        await this.register(registerData);\n        this.$message.success('注册成功，请登录');\n        this.activeTab = 'login';\n        this.loginForm.username = this.registerForm.username;\n        this.$refs.registerForm.resetFields();\n      } catch (error) {\n        console.error('注册失败:', error);\n        const message = error.response?.data?.detail || error.message || '注册失败，请重试';\n        this.$message.error(message);\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapActions","name","data","validateConfirmPassword","rule","value","callback","registerForm","password","Error","activeTab","loading","loginForm","username","email","full_name","confirm_password","loginRules","required","message","trigger","min","max","registerRules","pattern","type","validator","methods","handleLogin","$refs","validate","login","$message","success","$router","push","error","console","response","detail","handleRegister","registerData","undefined","register","resetFields"],"sources":["src/views/login/index.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <div class=\"login-background\">\n      <div class=\"login-content\">\n        <div class=\"login-header\">\n          <img\n            src=\"@/assets/logo.svg\"\n            alt=\"Logo\"\n            class=\"logo\"\n          >\n          <h1 class=\"title\">\n            训练存储工作流平台\n          </h1>\n          <p class=\"subtitle\">\n            企业级AI训练平台，支持Pipeline编排、增量学习、多用户并发训练\n          </p>\n        </div>\n        \n        <div class=\"login-form-container\">\n          <el-tabs\n            v-model=\"activeTab\"\n            class=\"login-tabs\"\n          >\n            <el-tab-pane\n              label=\"登录\"\n              name=\"login\"\n            >\n              <el-form\n                ref=\"loginForm\"\n                :model=\"loginForm\"\n                :rules=\"loginRules\"\n                class=\"login-form\"\n                @submit.native.prevent=\"handleLogin\"\n              >\n                <el-form-item prop=\"username\">\n                  <el-input\n                    v-model=\"loginForm.username\"\n                    placeholder=\"用户名\"\n                    prefix-icon=\"el-icon-user\"\n                    size=\"large\"\n                  />\n                </el-form-item>\n                \n                <el-form-item prop=\"password\">\n                  <el-input\n                    v-model=\"loginForm.password\"\n                    type=\"password\"\n                    placeholder=\"密码\"\n                    prefix-icon=\"el-icon-lock\"\n                    size=\"large\"\n                    show-password\n                    @keyup.enter.native=\"handleLogin\"\n                  />\n                </el-form-item>\n                \n                <el-form-item>\n                  <el-button\n                    type=\"primary\"\n                    size=\"large\"\n                    class=\"login-button\"\n                    :loading=\"loading\"\n                    @click=\"handleLogin\"\n                  >\n                    登录\n                  </el-button>\n                </el-form-item>\n              </el-form>\n            </el-tab-pane>\n            \n            <el-tab-pane\n              label=\"注册\"\n              name=\"register\"\n            >\n              <el-form\n                ref=\"registerForm\"\n                :model=\"registerForm\"\n                :rules=\"registerRules\"\n                class=\"register-form\"\n                @submit.native.prevent=\"handleRegister\"\n              >\n                <el-form-item prop=\"username\">\n                  <el-input\n                    v-model=\"registerForm.username\"\n                    placeholder=\"用户名\"\n                    prefix-icon=\"el-icon-user\"\n                    size=\"large\"\n                  />\n                </el-form-item>\n                \n                <el-form-item prop=\"email\">\n                  <el-input\n                    v-model=\"registerForm.email\"\n                    placeholder=\"邮箱\"\n                    prefix-icon=\"el-icon-message\"\n                    size=\"large\"\n                  />\n                </el-form-item>\n                \n                <el-form-item prop=\"full_name\">\n                  <el-input\n                    v-model=\"registerForm.full_name\"\n                    placeholder=\"全名（可选）\"\n                    prefix-icon=\"el-icon-user\"\n                    size=\"large\"\n                  />\n                </el-form-item>\n                \n                <el-form-item prop=\"password\">\n                  <el-input\n                    v-model=\"registerForm.password\"\n                    type=\"password\"\n                    placeholder=\"密码\"\n                    prefix-icon=\"el-icon-lock\"\n                    size=\"large\"\n                    show-password\n                  />\n                </el-form-item>\n                \n                <el-form-item prop=\"confirm_password\">\n                  <el-input\n                    v-model=\"registerForm.confirm_password\"\n                    type=\"password\"\n                    placeholder=\"确认密码\"\n                    prefix-icon=\"el-icon-lock\"\n                    size=\"large\"\n                    show-password\n                    @keyup.enter.native=\"handleRegister\"\n                  />\n                </el-form-item>\n                \n                <el-form-item>\n                  <el-button\n                    type=\"primary\"\n                    size=\"large\"\n                    class=\"register-button\"\n                    :loading=\"loading\"\n                    @click=\"handleRegister\"\n                  >\n                    注册\n                  </el-button>\n                </el-form-item>\n              </el-form>\n            </el-tab-pane>\n          </el-tabs>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapActions } from 'vuex'\n\nexport default {\n  name: 'Login',\n  data() {\n    // 密码确认验证\n    const validateConfirmPassword = (rule, value, callback) => {\n      if (value !== this.registerForm.password) {\n        callback(new Error('两次输入的密码不一致'))\n      } else {\n        callback()\n      }\n    }\n    \n    return {\n      activeTab: 'login',\n      loading: false,\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      registerForm: {\n        username: '',\n        email: '',\n        full_name: '',\n        password: '',\n        confirm_password: ''\n      },\n      loginRules: {\n        username: [\n          { required: true, message: '请输入用户名', trigger: 'blur' },\n          { min: 3, max: 20, message: '用户名长度在 3 到 20 个字符', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' },\n          { min: 6, message: '密码长度不能少于 6 个字符', trigger: 'blur' }\n        ]\n      },\n      registerRules: {\n        username: [\n          { required: true, message: '请输入用户名', trigger: 'blur' },\n          { min: 3, max: 20, message: '用户名长度在 3 到 20 个字符', trigger: 'blur' },\n          { pattern: /^[a-zA-Z0-9_]+$/, message: '用户名只能包含字母、数字和下划线', trigger: 'blur' }\n        ],\n        email: [\n          { required: true, message: '请输入邮箱', trigger: 'blur' },\n          { type: 'email', message: '请输入正确的邮箱格式', trigger: 'blur' }\n        ],\n        full_name: [\n          { max: 50, message: '全名长度不能超过 50 个字符', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' },\n          { min: 6, message: '密码长度不能少于 6 个字符', trigger: 'blur' }\n        ],\n        confirm_password: [\n          { required: true, message: '请确认密码', trigger: 'blur' },\n          { validator: validateConfirmPassword, trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  methods: {\n    ...mapActions('user', ['login', 'register']),\n    \n    async handleLogin() {\n      try {\n        await this.$refs.loginForm.validate()\n        this.loading = true\n        \n        await this.login(this.loginForm)\n        \n        this.$message.success('登录成功')\n        this.$router.push('/')\n      } catch (error) {\n        console.error('登录失败:', error)\n        const message = error.response?.data?.detail || error.message || '登录失败，请重试'\n        this.$message.error(message)\n      } finally {\n        this.loading = false\n      }\n    },\n    \n    async handleRegister() {\n      try {\n        await this.$refs.registerForm.validate()\n        this.loading = true\n        \n        const registerData = {\n          username: this.registerForm.username,\n          email: this.registerForm.email,\n          password: this.registerForm.password,\n          full_name: this.registerForm.full_name || undefined\n        }\n        \n        await this.register(registerData)\n        \n        this.$message.success('注册成功，请登录')\n        this.activeTab = 'login'\n        this.loginForm.username = this.registerForm.username\n        this.$refs.registerForm.resetFields()\n      } catch (error) {\n        console.error('注册失败:', error)\n        const message = error.response?.data?.detail || error.message || '注册失败，请重试'\n        this.$message.error(message)\n      } finally {\n        this.loading = false\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.login-container {\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n}\n\n.login-background {\n  width: 100%;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n.login-content {\n  display: flex;\n  background: rgba(255, 255, 255, 0.95);\n  border-radius: 20px;\n  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);\n  overflow: hidden;\n  backdrop-filter: blur(10px);\n}\n\n.login-header {\n  flex: 1;\n  padding: 60px 40px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  color: white;\n  text-align: center;\n  \n  .logo {\n    width: 80px;\n    height: 80px;\n    margin-bottom: 20px;\n    filter: brightness(0) invert(1);\n  }\n  \n  .title {\n    font-size: 2.5rem;\n    font-weight: 700;\n    margin-bottom: 15px;\n    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n  }\n  \n  .subtitle {\n    font-size: 1.1rem;\n    opacity: 0.9;\n    line-height: 1.6;\n    max-width: 400px;\n  }\n}\n\n.login-form-container {\n  flex: 1;\n  padding: 60px 40px;\n  background: white;\n  \n  .login-tabs {\n    max-width: 400px;\n    margin: 0 auto;\n    \n    ::v-deep .el-tabs__header {\n      margin-bottom: 30px;\n    }\n    \n    ::v-deep .el-tabs__item {\n      font-size: 1.1rem;\n      font-weight: 600;\n    }\n  }\n  \n  .login-form,\n  .register-form {\n    .el-form-item {\n      margin-bottom: 25px;\n    }\n    \n    .el-input {\n      ::v-deep .el-input__inner {\n        height: 50px;\n        border-radius: 8px;\n        border: 2px solid #e1e5e9;\n        transition: all 0.3s ease;\n        \n        &:focus {\n          border-color: #667eea;\n          box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\n        }\n      }\n    }\n    \n    .login-button,\n    .register-button {\n      width: 100%;\n      height: 50px;\n      border-radius: 8px;\n      font-size: 1.1rem;\n      font-weight: 600;\n      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n      border: none;\n      transition: all 0.3s ease;\n      \n      &:hover {\n        transform: translateY(-2px);\n        box-shadow: 0 8px 20px rgba(102, 126, 234, 0.3);\n      }\n      \n      &:active {\n        transform: translateY(0);\n      }\n    }\n  }\n}\n\n// 响应式设计\n@media (max-width: 768px) {\n  .login-content {\n    flex-direction: column;\n  }\n  \n  .login-header {\n    padding: 40px 20px;\n    \n    .title {\n      font-size: 2rem;\n    }\n    \n    .subtitle {\n      font-size: 1rem;\n    }\n  }\n  \n  .login-form-container {\n    padding: 40px 20px;\n  }\n}\n\n@media (max-width: 480px) {\n  .login-background {\n    padding: 10px;\n  }\n  \n  .login-header {\n    padding: 30px 15px;\n    \n    .title {\n      font-size: 1.8rem;\n    }\n  }\n  \n  .login-form-container {\n    padding: 30px 15px;\n  }\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}