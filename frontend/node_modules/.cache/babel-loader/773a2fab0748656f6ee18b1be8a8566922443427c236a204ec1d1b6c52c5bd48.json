{"ast":null,"code":"import { login, logout, getInfo } from '@/api/user';\nconst state = {\n  token: localStorage.getItem('token'),\n  userInfo: {},\n  roles: []\n};\nconst mutations = {\n  SET_TOKEN: (state, token) => {\n    state.token = token;\n  },\n  SET_USER_INFO: (state, userInfo) => {\n    state.userInfo = userInfo;\n  },\n  SET_ROLES: (state, roles) => {\n    state.roles = roles;\n  }\n};\nconst actions = {\n  // 用户登录\n  login({\n    commit\n  }, userInfo) {\n    const {\n      username,\n      password\n    } = userInfo;\n    return new Promise((resolve, reject) => {\n      login({\n        username: username.trim(),\n        password: password\n      }).then(response => {\n        const {\n          data\n        } = response;\n        commit('SET_TOKEN', data.token);\n        localStorage.setItem('token', data.token);\n        resolve();\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  },\n  // 获取用户信息\n  getInfo({\n    commit,\n    state\n  }) {\n    return new Promise((resolve, reject) => {\n      getInfo(state.token).then(response => {\n        const {\n          data\n        } = response;\n        if (!data) {\n          reject('验证失败，请重新登录。');\n        }\n        const {\n          roles,\n          name,\n          avatar,\n          email\n        } = data;\n        if (!roles || roles.length <= 0) {\n          reject('getInfo: 角色必须是非空数组!');\n        }\n        commit('SET_ROLES', roles);\n        commit('SET_USER_INFO', {\n          name,\n          avatar,\n          email\n        });\n        resolve(data);\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  },\n  // 用户登出\n  logout({\n    commit,\n    state\n  }) {\n    return new Promise((resolve, reject) => {\n      logout(state.token).then(() => {\n        commit('SET_TOKEN', '');\n        commit('SET_ROLES', []);\n        localStorage.removeItem('token');\n        resolve();\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  },\n  // 移除token\n  resetToken({\n    commit\n  }) {\n    return new Promise(resolve => {\n      commit('SET_TOKEN', '');\n      commit('SET_ROLES', []);\n      localStorage.removeItem('token');\n      resolve();\n    });\n  }\n};\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions\n};","map":{"version":3,"names":["login","logout","getInfo","state","token","localStorage","getItem","userInfo","roles","mutations","SET_TOKEN","SET_USER_INFO","SET_ROLES","actions","commit","username","password","Promise","resolve","reject","trim","then","response","data","setItem","catch","error","name","avatar","email","length","removeItem","resetToken","namespaced"],"sources":["/Users/windwheel/Documents/gitrepo/train-storge-workflow/frontend/src/store/modules/user.js"],"sourcesContent":["import { login, logout, getInfo } from '@/api/user'\n\nconst state = {\n  token: localStorage.getItem('token'),\n  userInfo: {},\n  roles: []\n}\n\nconst mutations = {\n  SET_TOKEN: (state, token) => {\n    state.token = token\n  },\n  SET_USER_INFO: (state, userInfo) => {\n    state.userInfo = userInfo\n  },\n  SET_ROLES: (state, roles) => {\n    state.roles = roles\n  }\n}\n\nconst actions = {\n  // 用户登录\n  login({ commit }, userInfo) {\n    const { username, password } = userInfo\n    return new Promise((resolve, reject) => {\n      login({ username: username.trim(), password: password })\n        .then(response => {\n          const { data } = response\n          commit('SET_TOKEN', data.token)\n          localStorage.setItem('token', data.token)\n          resolve()\n        })\n        .catch(error => {\n          reject(error)\n        })\n    })\n  },\n\n  // 获取用户信息\n  getInfo({ commit, state }) {\n    return new Promise((resolve, reject) => {\n      getInfo(state.token)\n        .then(response => {\n          const { data } = response\n          if (!data) {\n            reject('验证失败，请重新登录。')\n          }\n          const { roles, name, avatar, email } = data\n          if (!roles || roles.length <= 0) {\n            reject('getInfo: 角色必须是非空数组!')\n          }\n          commit('SET_ROLES', roles)\n          commit('SET_USER_INFO', { name, avatar, email })\n          resolve(data)\n        })\n        .catch(error => {\n          reject(error)\n        })\n    })\n  },\n\n  // 用户登出\n  logout({ commit, state }) {\n    return new Promise((resolve, reject) => {\n      logout(state.token)\n        .then(() => {\n          commit('SET_TOKEN', '')\n          commit('SET_ROLES', [])\n          localStorage.removeItem('token')\n          resolve()\n        })\n        .catch(error => {\n          reject(error)\n        })\n    })\n  },\n\n  // 移除token\n  resetToken({ commit }) {\n    return new Promise(resolve => {\n      commit('SET_TOKEN', '')\n      commit('SET_ROLES', [])\n      localStorage.removeItem('token')\n      resolve()\n    })\n  }\n}\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}